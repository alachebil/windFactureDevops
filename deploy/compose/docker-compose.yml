version: '3.8'

services:

  postgres:
    image: postgres:15
    container_name: postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - net
    ports:
      - "5432:5432"

  discovery:
    image: 192.168.1.192:8082/discovery:latest
    container_name: discovery
    ports:
      - "8761:8761"
    networks:
      - net

  config-server:
    image: 192.168.1.192:8082/config-server:latest
    container_name: config-server
    depends_on:
      - discovery
    ports:
      - "8888:8888"
    environment:
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://discovery:8761/eureka/
    networks:
      - net

  auth-service:
    image: 192.168.1.192:8082/auth-service:latest
    container_name: auth-service
    depends_on:
      postgres:
        condition: service_healthy
      discovery:
        condition: service_started
    ports:
      - "8090:8090"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/auth
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: ${POSTGRES_PASSWORD}
      JWT_SECRET: ${JWT_SECRET}
      SPRING_MAIL_USERNAME: ${MAIL_USER}
      SPRING_MAIL_PASSWORD: ${MAIL_PASSWORD}
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://discovery:8761/eureka/
      EUREKA_INSTANCE_PREFER_IP_ADDRESS: "true"
    networks:
      - net

  client-service:
    image: 192.168.1.192:8082/client-service:latest
    container_name: client-service
    depends_on:
      postgres:
        condition: service_healthy
      discovery:
        condition: service_started
    ports:
      - "8092:8092"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/Client
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: ${POSTGRES_PASSWORD}
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://discovery:8761/eureka/
      EUREKA_INSTANCE_PREFER_IP_ADDRESS: "true"
    networks:
      - net

  facture:
    image: 192.168.1.192:8082/facture:latest
    container_name: facture
    depends_on:
      postgres:
        condition: service_healthy
      discovery:
        condition: service_started
    ports:
      - "8094:8094"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/facture
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: ${POSTGRES_PASSWORD}
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://discovery:8761/eureka/
      EUREKA_INSTANCE_PREFER_IP_ADDRESS: "true"
    networks:
      - net

  services-ser:
    image: 192.168.1.192:8082/services-ser:latest
    container_name: services-ser
    depends_on:
      postgres:
        condition: service_healthy
      discovery:
        condition: service_started
    ports:
      - "8093:8093"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/services
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: ${POSTGRES_PASSWORD}
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://discovery:8761/eureka/
      EUREKA_INSTANCE_PREFER_IP_ADDRESS: "true"
    networks:
      - net

volumes:
  postgres-data:

networks:
  net:
    driver: bridge